
    (?<openpar>[(](?<![)])) (?# for ease with VSCode bracket calculations)
    
    (?<sub>[(][?]<(??{set {"matches" => {}}})(\[?+)(??{setmatch {"square" => $^N}})(?<namesub>\w++)(?(?{evalval sub{$matches[-1]->{square}}})\])>
        (?{call "regbeginsub"})(?{call2 "argsreset"})
        ([{]((\w++),(?{call2 "argsappend"}))*+})?+(?&regex)[)]
    (?{call "regfinishsub"})(??{unset "matches"}))

    (?<group>[(](?![&*])(?![?][^>])(??{set {"matches" => {}}})(([?][>])?+)
        (??{setmatch {"atomic" => $^N}})(?{call "regbegingroup"})(?&regex)[)]
    (?{call "regfinishgroup"})(??{unset "matches"}))

    (?<call>[(][?](??{set {"matches" => {}}})
        ((&(<)?+(??{setmatch {"angular" => $^N}}))?+)(??{setmatch {"ampersand" => $^N}})
        (?<callee>\w++)(?(?{evalval sub{$matches[-1]->{angular}}})>(?{call2 "regbeginsubcall"}))(?{call "regcall"})(?{call2 "argsreset"})
        (?(?{evalval sub{$matches[-1]->{ampersand}}})([(](\w++)(?{call2 "argsappend"})
        (,(\w++)(?{call2 "argsappend"}))*+[)])?+)[)]
    (?(?{evalval sub{$matches[-1]->{angular}}})(?{call "regfinishsub"}))(??{unset "matches"}))

    (?<lookaround>[(][?](??{set {"matches" => {}}})([!=])(??{setmatch {"sign" => $^N}})
        (?{call "regbeginlookaround"})(?&regex)[)]
        (?{call "regfinishlookaround"})(??{unset "matches"}))

    (?<char>(??{set {"matches" => {}}})(?(?=\\)\\([^g])(??{setmatch {"escape" => $^N}})
        |([^\[\]?*+{()}|])(??{setmatch {"raw" => $^N}}))(?{call "regchar"})(??{unset "matches"}))

    (?<backreference>\\g[{](??{set {"matches" => {}}})(?<namebackref>\w++)[}](?{call "regbackref"})(??{unset "matches"}))

    (?<sequence>\[(??{set {"matches" => {}}})(^?+)(??{setmatch {"not" => $^N}})(?{call "regbeginseq"})
    (\\(.)(??{setmatch {"escape" => $^N}})|(.)(??{setmatch {"raw" => $^N}})(-([^]])(??{setmatch {"to" => $^N}})))(?{call "regchar"})
    (?(?=\\)\\(.)(??{setmatch {"escape" => $^N}})|([^]])(??{setmatch {"raw" => $^N}})(-([^]])(??{setmatch {"to" => $^N}}))(?{call "regchar"}))*+\]
    (?{call "regfinishseq"})(??{unset "matches"}))

    (?<conditional>[(][?](?(?=(?&openpar)[^<])
    (??{set {"savedcallouts" => []}})(?&lookaround)
    |(??{set {"savedcallouts" => [], "matches" => {}}})[(]<(\w++)>[)](??{setmatch {"nametocheck" => $^N}})(?{call "regcheckname"}))(??{unset "matches"})
    (??{set {"savedcallouts" => []}})(?&regexpart)(?{call2 "regbranch"})(?&regexor)[)](?{call2 "regend"}))

    (?<verb>[(][*](?<verb>[A-Z]++)[)](?{call "regverb"}))

    (?<regexinner>(??{startrecord})(?(?=(?<match>(?&conditional)))
    \g{match}|(?(?=(?<match>(?&lookaround)))
    \g{match}|(?(?=(?<match>(?&call)))
    \g{match}|(?(?=(?<match>(?&sub)))
    \g{match}|(?(?=(?<match>(?&verb)))
    \g{match}|(?(?=(?<match>(?&sequence)))
    \g{match}|(?(?=(?<match>(?&group)))
    \g{match}|(?(?=(?<match>(?&backreference)))
    \g{match}|(?(?=(?<match>(?&char)))
    \g{match}|(*F)
    )))))))))(??{set {"matches" => {}}})(([*+?][+?]?+)?+)(??{setmatch {"quantifiers" => $^N}})(?{call2 "regendinner"})(??{unset "matches"}))

    (?<regexpart>(?(?=(?<reinner>(?&regexinner)++))\g{reinner}|(?{call "regnothing"})))

    (?<regexor>([|](??{set {"savedcallouts" => []}})(?&regexpart)(?{call2 "regbranch"}))*+)

    (?<regex>(??{set {"savedcallouts" => []}})(?&regexpart)(?&regexor)(?{call2 "regend"}))