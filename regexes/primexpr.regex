#include "statement.regex", "inner.regex", "unary.regex", "binary.regex", "typename.regex"
#entry ^cprogram

(?<primexpr>(?&assignorsomething)(,(?&assignorsomething))*+)


(?<castexpr>(?&typenamerev)|(?<unaryexpr>((?&inner)|(?<inparenths>\s*+[(](?&primexpr)[)]
						\s*+))(((\[(?&primexpr)\](?{call 'subscript'})|[(](?{call 'startfunctioncall'})(?&primexpr)?[)]
						(?{call 'endfunctioncall'}))\s*+
						|(?<arrowordot>(?<arrowordotraw>[.]|->))(?&identifierminemember)
						|(?<postfixarith>(?<postfixarithraw>[+][+]|--)\s*+)
						(?{call 'unaryincdec'})))*+
						|(?&unary)))

(?<identifierminemember>\s*+(?<ident>(?&identifierraw_qualified))
	(?{call 'memberaccess'})\s*+)

(?<testxpr>(?&inner)|(?&inparenths))

(?<assignorsomething>
	(?(?=(?{push @savedcallouts, []})
		(?{++$recording; print "recording assignorsomething\n"})((?&unaryexpr)))(??{qr{\Q$^N\E}})
	(?{--$recording; print "minus minus assignorsomething $recording\n"})(?{call 'begin_binary'})(?{replayrecord})(?{pop @savedcallouts})
	((?<assignop>(?<binoplast>=|\*=|\/=|%=|\+=|-=|<<=|>>=|&=|\^=|\|=)\s*+)
		(?&assignorsomething)(?{call 'binary'})(?{call 'end_binary'})|(?&ternaryorsomething)(?{call 'end_binary'}))
		|(?{$savedcallouts[-1] = []; print "resetting record\n"})(?(?=((?&typename))(?{call 'begin_binary'}))|(?{--$recording})(?{pop @savedcallouts})(*F))
		(??{qr{\Q$^N\E}})(?{--$recording; print "minus minus assignorsomething typename $recording\n"})(?&typenamerev)(?{replayrecord})
		(?{pop @savedcallouts})(?&ternaryorsomething)(?{call 'end_binary'}))
)

(?<ternaryorsomething>(?&orlogiorsomething)((?&ternaryrest)
	(?&ternaryorsomething))?+)

(?<ternaryrest>\?(?&primexpr):)	
