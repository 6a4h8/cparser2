#include "statement.regex", "inner.regex", "unary.regex", "binary.regex", "typename.regex"
#entry ^cprogram

(?<primexprraw>(?&assignorsomething)(,(?&assignorsomething))*+)

(?<primexprnew>(?{push2 \@flags, {"newexpr"}})(?(?=((?&primexprraw)))(??{qr{\Q$^N\E}})
	(?{pop2 \@flags})|(?{pop2 \@flags})(*F)))


(?<castexpr>(?(?=((?&typenamerev)))(??{qr{\Q$^N\E}})|(?<unaryexpr>(?(?=((?&inner)))(??{qr{\Q$^N\E}})
						|(?<inparenths>\s*+[(](?&primexprnew)[)]
						\s*+))(((\[(?&primexprnew)\](?{call 'subscript'})|[(](?{call 'startfunctioncall'})(?&primexprnew)?+[)]
						(?{call 'endfunctioncall'}))\s*+
						|(?<arrowordot>(?<arrowordotraw>[.]|->))(?&identifierminemember)
						|(?<postfixarith>(?<postfixarithraw>[+][+]|--)\s*+)
						(?{call 'unaryincdec'})))*+
						|(?&unary))))

(?<identifierminemember>\s*+(?<ident>(?&identifierraw_qualified))
	(?{call 'memberaccess'})\s*+)

(?<testxpr>(?&inner)|(?&inparenths))

(?<assignorsomething>
	(?(?=(?{push2 \@savedcallouts, []})
		(?{++$recording; print "recording assignorsomething\n"})(?{call 'begin_binary'})((?&unaryexpr)))(??{qr{\Q$^N\E}})
	(?{--$recording; print "minus minus assignorsomething $recording\n"})(?{replayrecord})(?{pop2 \@savedcallouts})
	(?(?=((?<assignop>=(?!=)|\*=|\/=|%=|\+=|-=|<<=|>>=|&=|\^=|\|=)\s*+))
		(??{qr{\Q$^N\E}})(?{call 'end_binary'})(?&assignorsomething)(?{assignment})
		|(?&ternaryorsomething))
		|(?{$savedcallouts[-1] = []; print "resetting record\n"})(?(?=((?&typenamerev)))|(?{--$recording})(?{pop2 \@savedcallouts})(*F))
		(??{qr{\Q$^N\E}})(?{--$recording; print "minus minus assignorsomething typename $recording\n"})(?{replayrecord})
		(?{pop2 \@savedcallouts})(?&ternaryorsomething))
)

(?<ternaryorsomething>(?&orlogiorsomething)(?(?=((?{push2 \@savedcallouts, []})
		(?{++$recording; print "recording ternaryorsomething\n"})(?&ternaryrest)))(??{qr{\Q$^N\E}})
	(?{--$recording; print "minus minus ternaryorsomething $recording\n"})(?{replayrecord})(?{pop2 \@savedcallouts})
	(?{call 'begin_binary'})(?&castexpr)(?&ternaryorsomething)(?{call 'end_ternary'})(?{call 'end_binary'})
	|(?{--$recording})(?{pop2 \@savedcallouts})(?{call 'end_binary'}))
)

(?<ternaryrest>\s*+\?(?{call 'begin_ternary'})(?&primexprraw)
	:(?{call 'mid_ternary'})\s*+)
