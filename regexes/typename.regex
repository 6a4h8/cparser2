(?<typename>\s*+[(]((?<allqualifs>(?<typesandqualifiers>\s*+
						(?<typesandqualifiersmask>(\bvoid\b|\bint\b|\bchar\b|\bshort\b|\blong\b
						|\bsigned\b|\bunsigned\b|\bfloat\b|\bdouble\b|\b__int64\b|\b_Bool\b)|
						(?<qualifiers>\bconst\b|\brestrict\b|\bvolatile\b)
						|(?<storageclass>\bextern\b|\bstatic\b|\bauto\b|\bregister\b))(?C49<typesandqualifiersmask>)\s*+)
						|(?&structorunion)|(\s*+(\b__inline\b|\b__forceinline\b)\s*+))|(?&&identifierminetypedeffacet<>))++
						(?C55<typedefnmmatched>)
						(?&abstdecloptoutter)?+[)](?C46)\s*+)

(?<>)
(?<typedefdecl>(?&&identifierminetypedeffacet<>)(?=(?&allqualifsfacet)*+(?&abstdecloutterfacet)))

(?<>)
(?<allqualifsdecl>(?&allqualifs)|(?&&typedefdecl<>)|\s*+(?<typedefkeyfacet>\btypedef\b)\s*+)

(?# The committee has decided against (if actually even possible) having the same name as a typedef for a parameter)
(?<>)
(?<typedefparam>(?&&identifierminetypedeffacet<>))
(?<>)
(?<allqualifsparam>(?&allqualifs)|(?&&typedefparam<>))

(?<Tabstrrest, Tabstrrestalt, Tinside>)(?<abstdecl>(?<abstrptrrev#restrictoutsidefacet>(?<abstrptr>\s*+[*]\s*+
						(?<qualifptr>(?&qualifiers)|\b__ptr64\b\s*+)*+)
						(?!(?&abstrptrrev)(?C11<qualifptr>))
						(?<abstrrest>(?&Tinside)(?<abstrsubs>\s*+(\[(?C40)(?&primexpr)\](?C41)
						|[(](?C47)(\s*+\bvoid\b\s*+|(((?&typenameinsideparams)(?C42))?+
						(,(?&typenameinsideparams)(?C42))*(?<rest>,\s*+\.\.\.\s*+)?+))[)](?C48<rest>))\s*+)*+(?C11<qualifptr>))|
						(?&abstrptr))(?&abstrptr)*+(?&Tabstrrest)|(?&Tabstrrestalt))


(?&abstdecl<abstrdecloptrest, abstrdecloptrestalt, abstrmostoutteropt?+>=abstdecloptoutter)

(?<abstrdecloptrestalt>(?&abstrmostoutteropt)(?&abstrsubs)*+|(?&abstrsubs)++)

(?<abstrdecloptrest>(?&abstrmostoutteroptfacet)?+(?&abstrsubsfacet)*+)

(?&abstdecl<abstrdeclrest, abstrdeclrestalt, abstrmostoutter>=abstdecloutter)

(?<abstrdeclrestalt>(?&abstrmostoutter)(?&abstrsubs)*+)

(?<abstrdeclrest>(?&abstrmostoutterfacet)(?&abstrsubsfacet)*+)

(?&abstdecl<abstrdecloptrestparams, abstrdecloptrestaltparams, abstrmostoutterparams?+>=abstdecloutterparams)

(?<abstrdecloptrestaltparams>(?&abstrmostoutterparams)(?&abstrsubs)*+|(?&abstrsubs)++)

(?<abstrdecloptrestparams>(?&abstrmostoutterparamsfacet)?+(?&abstrsubsfacet)*+)

(?<Tabstrdeclinside>)(?<abstrcommonoutter>[(](?<cc>((?&callingconv))?+)(?&Tabstrdeclinside)(?C81)[)])

(?<abstrmostoutteropt>\s*+(?&callingconv)?+(?&abstrcommonoutter<abstdecloptoutter>)\s*+)

(?<abstrmostoutter>\s*+(?&callingconv)?+((?&abstrcommonoutter<abstdecloutter>)|(?&identifierminedecl))\s*+)

(?<abstrmostoutterparams>\s*+((?&abstrcommonoutter<abstdecloutterparams>)|(?&identifierminedecl))\s*+)

(?<callingconv>\b(__cdecl|__stdcall|__thiscall|__fastcall)\b)

(?<Tabsqualifs, Tasbtdecloutter, Tabstinitorbitfl>)
(?<abstdeclorallqualifs>(?<#restrictoutsidefacet>(?&&Tabsqualifsfacet<>)(?!(?&&decl<Tasbtdecloutter, Tabstinitorbitfl>)))
				|(?&&Tabsqualifs<>)(?&declfacet)(?C55))


(?<Tasbtdecloutter, Tabstinitorbitfl>)
(?<decl>(?C42)(?&Tasbtdecloutter)
			(?&Tabstinitorbitfl)?
			(,(?C43)(?&Tasbtdecloutter)(?C42)(?&Tabstinitorbitfl)?+)*)

(?<decloptorfndef>(?&typenameinsideopt)(\s*+;\s*+|(?&compoundstatement)))

(?&abstdeclorallqualifs<allqualifsdecl*+, abstdecloutter, abstrinitialization>=typenameinsideopt)

(?&abstdeclorallqualifs<allqualifsdecl++, abstdecloutter, abstrinitialization>=typenameinsidedecl)

(?&abstdeclorallqualifs<allqualifsparam++, abstdecloutter>=typenameinsideparams)

(?&abstdeclorallqualifs<allqualifsparam++, abstdecloutter, abstrbitfield>=typenamebitfl)

(?<identifierminedecl>\s*+(?!(?&keywordlist))(?<ident>(?&identifierrawfacet))(?C39<ident, typedefnmmatchedfacet, typedefkeyfacet>)\s*+)
(?<>)
(?<identifierminetypedef#restrictpcre2only>\s*+(?!(?&keywordlist))(?<typedefnmmatched>(?<typedefnmfacet>(?&identifierrawfacet))(??C38))\s*+)
(?<identifierminetypedef#restrictperlonly>\s*+\b(?<typedefnmmatchedfacet>(??C38))\b\s*+)

(?<keywordlist>(?&typesandqualifiersmask)|\b(struct|enum|sizeof|break|case|continue|default|do|else|for|goto|if|return|switch|while)\b)

(?<typenamerev>(?<#restrictoutsidefacet>(?&typenamefacet)(?!(?&castexpr)))|(?&typename)(?C61)(?&castexprfacet))


(?<abstrbitfield>\s*+:\s*+(?&assignorsomething))
(?<designator>\s*+(\[(?&primexpr)\]|\.\s*+(?&identifier))\s*+)
(?<initializer>(?&assignorsomething)(?C95)|\s*+[{]((?&designator)++=)?+(?&initializer)?(,(?&initializer))*+,?+\s*+[}]\s*+)
(?<abstrinitialization>=(?&initializer))

(?<calloutid>)
(?<identifiermine>\s*+(?!(?&keywordlist))(?<identlast>(?&identifierrawfacet))(?&calloutid<identlast>)\s*+)

(?<structorunion>\s*+(?<structorunionlast>struct|union)((?&identifierminestruct<>)?+\s*+[{](?C59)\s*+((?&typenamebitfl)\s*+;\s*+)*+[}](?C60)\s*+
|(?&identifierminestruct<>))|(?&enum))(?<enum>\s*+enum(((?&&identifiermine<90>)
|(?C94))\s*+[{](?<enumerator>(?&&identifiermine<89>)((=(?C40)(?&assignorsomething)(?C92))
|(?C93)))?+(,(?&enumerator))*+,?+\s*+[}]\s*+
|(?&&identifiermine<91>)))

(?<>)
(?<identifierminestruct>\s*+(?!(?&keywordlist))(?<ident>(?&identifierrawfacet))(?C58<structorunionlast, ident>)\s*+)
(?C42)
(?<declninitopt>(?&typenameinsidedeclfacet)(?&abstrinitialization)?+)
(?<declaration>((?&declninitoptfacet)(?!)
			(,(?C43)(?&abstdecloutter)(?C42)(?&abstrinitialization)?+)*+\s*+;\s*+))

(,(?&abstdecloutter)(?&abstrinitialization)?+)*+