

(?<qualifs>(?<typesandqualifiers>\s*+
						(?<typesandqualifiersmask>(?&typeorqualif))\s*+))

(?<typename>\s*+[(]
(?<typenameinner>

	((*record{})

		(?<typenamequalifs>(?&qualifs)|(?&structorunion))++

		|(*drop{})
	)
		
	(*shelfrecord{typenameinner})

		(*call{identifier_decl})
		(?&abstdecl)?+
		(*call{enddeclaration})

	(*replay{typenameinner})

		[)](*call{endqualifs})\s*+
		
)

(?<abstrmostoutteropt>\s*+[(](?&abstdecl)[)]\s*+)

(?<abstrmostoutter>\s*+([(](?&abstdecl)[)]|(?&identifierminedecl))\s*+)

(?<abstrmostoutterparams>\s*+
			[(](?&abstdecl)[)]\s*+|
			((?&identifierminedecl)|(*call{identifier_decl}))
)

(?<identifierminedecl>\s*+(?<ident>(?&identifierraw_qualified))
	(*call{identifier_decl})\s*+)

(?<Tabstrrestalt>
	(?(*existsflag{outterparams,outter,optoutter})
	
			((*record{})(*call{identifier_decl})(?&abstrsubs)(*replay{})|(*drop{}))

			(?&abstrsubs)*+

	|(?(*existsflag{outter,outterparams,optoutter})(?&abstrmostoutter)(?&abstrsubs)*+
	|(?(*existsflag{optoutter,outterparams,outter})((?&abstrmostoutteropt)(?&abstrsubs)*+|(?&abstrsubs)++))))
	)

(?<Tinside>
	(?(*existsflag{outterparams,outter,optoutter})(?&abstrmostoutterparams)
	|(?(*existsflag{outter,outterparams,optoutter})(?&abstrmostoutter)
	|(?(*existsflag{optoutter,outterparams,outter})(?&abstrmostoutteropt)?+))
	)
)

(?<param>(*flags{outterparams,nonopt,nonbitfl})(?{clear}(?&abstdeclorallqualifs)))

(?<closingparen>(?![(])[)])

(?<openparen>[(](?<![)]))

(?<abstrsubs>\s*+(\[(*call{beginconstantexpr})(?&primexprnew)\]
						(*call{addsubtotype})(*call{endconstantexpr})
						|(
							(?&openparen)

							(*call{startfunctionparamdecl})

							((?!(?&singlevoid)(?&closingparen))(&param)(,(?&param))*+
								(?<rest>,\s*+\.\.\.\s*+)?+
							|(?<singlevoid>\s*+\bvoid\b\s*+))

							(*call{endfunctionparamdecl})

							(?&closingparen)
						)\s*+)
)

(?<abstdecl>
		(?<abstrptrrev>(?<abstrptr>\s*+[*]\s*+
							(?&typeorqualif)*+
						)
						(?(?!(?<foundabstr>(?&abstrptrrev))(*call{addptrtotype}))
						(?<abstrrest>(?&Tinside)(?&abstrsubs)*+
						(*call{addptrtotype}))|
						\g{foundabstr}))|(?&Tabstrrestalt)
)

(?<Tasbtdecloutter>
	(?&abstdecl)
)

(?<Tabstinitorbitfl>
	(?(*existsflag{bitfl,nonbitfl})(?&abstrbitfield)|(?&abstrinitialization))
)

(?<Tdecl>(?&Tasbtdecloutter)
			(?&Tabstinitorbitfl)?+)

(?<abstdeclorallqualifsqualifs>((?&qualifs)|(?&structorunion))++)


(?<abstdeclorallqualifs>
	
	((*record{})

		(?&typenamequalifs)++

		|(*dropif{nonopt,opt})
	)
	|
	(*shelfrecord{declqualifs})

	(*COMMIT)

	(?<declinner>(?&Tdecl)(*call{enddeclaration})(*replaydontdestruct{declqualifs})(*call{endqualifs}))
	(?(*existsflag{outterparam,outter,optoutter})|(,(?&declinner))*+)

	(*destruct{declqualifs})
)

(?<declopt>(*flags{outter,opt,nonbitfl})(?{clear}(?&abstdeclorallqualifs))((?(?!\s*+;)(?&compoundstatement)|\s*+;(*call{endfulldecl})\s*+)))

(?<decl>(*flags{outter,nonopt,nonbitfl})(?{clear}(?&abstdeclorallqualifs))\s*+;(*call{endfulldecl})\s*+)

(?<cprogram>(?&declopt))

(?<typenamerev>((*record{})(?&typename)(*shelfrecord{typenamerev})
		(?&castexpr)
		(*replay{typenamerev})
		(*call{applycast})
		
		|(*drop{}))
)


(?<abstrbitfield>\s*+:\s*+(*call{beginconstantexpr})(?&assignorsomething)(*call{endconstantexpr}))
(?<designator>\s*+(\[(?&primexprnew)\]|\.\s*+(?&identifier))\s*+)
(?<initializer>(?&assignorsomething)|\s*+[{]((?&designator)++=)?+(?&initializer)?(,(?&initializer))*+,?+\s*+[}]\s*+)
(?<abstrinitialization>=(?&initializer))

(?<add_ident_to_enum_def>\s*+(?<identlasttag>(?&identifierraw_qualified))(*call{add_ident_to_enum_def})\s*+)


(?<strcelem>(*flags{outter,nonopt,bitfl})(?{clear}(?&abstdeclorallqualifs))\s*+;\s*+)

(?<structbody>\s*+[{](*dark{})(?(<enum>)(*call{begin_enumerator_def})
	(?<enumerator>(?&add_ident_to_enum_def)
	((=(*call{beginconstantexpr})(*isolate{})(?&assignorsomething)(*end{})(*call{end_ass_to_enum_def}))
	|(*call{end_without_ass_to_enum_def})))?+(,(?&enumerator))*+,?+\s*+
	|(*call{struc_or_union_body})\s*+(?&strcelem)*+)\s*+
	[}]\s*+(?(<enum>)|(*call{endbuildingstructorunion}))\s*+
	(*bright{})
)

(?<structorunion>
	(?=(?<begin>\s*+\b(?<structorunionlast>struct|union|(?<enum>enum))\b\s*+
	(?<lasttag>(?&identifierminestruct))?+))\g{begin}
	((?&structbody)|(?(<lasttag>)|(*F)))
	(?{call 'add_tag'})
)

(?<identifierminestruct>(?&identifierraw_qualified))