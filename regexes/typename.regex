(?<typename>\s*+[(]((?<allqualifs>(?<typesandqualifiers>\s*+
						(?<typesandqualifiersmask>(\bvoid\b|\bint\b|\bchar\b|\bshort\b|\blong\b
						|\bsigned\b|\bunsigned\b|\bfloat\b|\bdouble\b|\b__int64\b|\b_Bool\b)|
						(?<qualifiers>\bconst\b|\brestrict\b|\bvolatile\b)
						|(?<storageclass>\bextern\b|\bstatic\b|\bauto\b|\bregister\b))(?C&add_type_or_qualifier<typesandqualifiersmask>)\s*+)
						|(?&&structorunion<>)|(\s*+(\b__inline\b|\b__forceinline\b)\s*+))|(?&&identifierminetypedef<>))++
						(?C&identifier_decl)(?&abstdecloptoutter)?+[)](?C&enddeclaration)\s*+)

(?<>)
(?<typedefdecl>(?&&identifierminetypedef<>)(?=(?&allqualifsfacet)*+(?&abstdecloutterfacet)))

(?<>)
(?<allqualifsdecl>(?&allqualifs)|(?&&typedefdecl<>)|\s*+(?<typedefkeyfacet>\btypedef\b)\s*+)

(?# The committee has decided against (if actually even possible) having the same name as a typedef for a parameter)
(?<>)
(?<typedefparam>(?&&identifierminetypedef<>))
(?<>)
(?<allqualifsparam>(?&allqualifs)|(?&&typedefparam<>))

(?<Tabstrrest, Tabstrrestalt, Tinside>)(?<abstdecl>(?<abstrptrrev#restrictoutsidefacet>(?<abstrptr>\s*+[*]\s*+
						(?<qualifptr>(?&qualifiers)|\b__ptr64\b\s*+)*+)
						(?!(?&abstrptrrev)(?C&addptrtotype<qualifptr>))
						(?<abstrrest>(?&Tinside)(?<abstrsubs>\s*+(\[(?C&beginconstantexpr)(?&primexpr)\]
						(?C&addsubtotype)(?C&endconstantexpr)
						|[(](?C&startfunctionparamdecl)(\s*+\bvoid\b\s*+|(((?&typenameinsideparams)(?#C42))?+
						(,(?&typenameinsideparams)(?#C42))*(?<rest>,\s*+\.\.\.\s*+)?+))[)](?C&endfunctionparamdecl<rest>))\s*+)*+(?C&addptrtotype<qualifptr>))|
						(?&abstrptr))(?&abstrptr)*+(?&Tabstrrest)|(?&Tabstrrestalt))


(?&abstdecl<abstrdecloptrest, abstrdecloptrestalt, abstrmostoutteropt?+>=abstdecloptoutter)

(?<abstrdecloptrestalt>(?&abstrmostoutteropt)(?&abstrsubs)*+|(?&abstrsubs)++)

(?<abstrdecloptrest>(?&abstrmostoutteroptfacet)?+(?&abstrsubsfacet)*+)

(?&abstdecl<abstrdeclrest, abstrdeclrestalt, abstrmostoutter>=abstdecloutter)

(?<abstrdeclrestalt>(?&abstrmostoutter)(?&abstrsubs)*+)

(?<abstrdeclrest>(?&abstrmostoutterfacet)(?&abstrsubsfacet)*+)

(?&abstdecl<abstrdecloptrestparams, abstrdecloptrestaltparams, abstrmostoutterparams?+>=abstdecloutterparams)

(?<abstrdecloptrestaltparams>(?&abstrmostoutterparams)(?&abstrsubs)*+|(?&abstrsubs)++)

(?<abstrdecloptrestparams>(?&abstrmostoutterparamsfacet)?+(?&abstrsubsfacet)*+)

(?<Tabstrdeclinside>)(?<abstrcommonoutter>[(](?<cc>((?&callingconv))?+)(?&Tabstrdeclinside)(?C81)[)])

(?<abstrmostoutteropt>\s*+(?&callingconv)?+(?&abstrcommonoutter<abstdecloptoutter>)\s*+)

(?<abstrmostoutter>\s*+(?&callingconv)?+((?&abstrcommonoutter<abstdecloutter>)|(?&identifierminedecl))\s*+)

(?<abstrmostoutterparams>\s*+((?&abstrcommonoutter<abstdecloutterparams>)|(?&identifierminedecl))\s*+)

(?<callingconv>\b(__cdecl|__stdcall|__thiscall|__fastcall)\b)

(?<Tabsqualifs, Tasbtdecloutter, Tabstinitorbitfl>)
(?<abstdeclorallqualifs>
		(
			(*F)(?&&decl<Tasbtdecloutter, Tabstinitorbitfl>)
			(?<declcomma>,(?&decl))
		)|
		(?<#restrictoutsidefacet>
		(?&&Tabsqualifsfacet<>)(?!(?&decl)(?C&enddeclaration))
				|(?&&Tabsqualifs<>)(?&declfacet)
				|(?<restoutter>(?=(?&&Tabsqualifsfacet<>)(?&declfacet)
				(?<rest>(?(<rest>)\g{rest}),(?&decl)(?C&enddeclaration)))
				((?&&Tabsqualifs<>)(?&declfacet)\g{rest}|(?&restoutter))))
				|(?&Tabsqualifsfacet)(?&declfacet)(?&declcommafacet)*+)	


(?<Tasbtdecloutter, Tabstinitorbitfl>)
(?<decl>(?&Tasbtdecloutter)
			(?&Tabstinitorbitfl)?)

(?<decloptorfndef>(?&typenameinsideopt)(\s*+;\s*+|(?&compoundstatement)))

(?&abstdeclorallqualifs<allqualifsdecl*+, abstdecloutter, abstrinitialization>=typenameinsideopt)

(?&abstdeclorallqualifs<allqualifsdecl++, abstdecloutter, abstrinitialization>=typenameinsidedecl)

(?&abstdeclorallqualifs<allqualifsparam++, abstdecloutter>=typenameinsideparams)

(?&abstdeclorallqualifs<allqualifsdecl++, abstdecloutter, abstrbitfield>=typenamebitfl)

(?<identifierminedecl>\s*+(?!(?&keywordlist))(?<identfacet>(?&identifierrawfacet))(?C&identifier_decl<identfacet,
																					 typedefnmmatchedfacet,
																					 typedefkeyfacet,
																					  identlasttagfacet,
																					  structorunionlastfacet>)\s*+)
(?<>)
(?<identifierminetypedef#restrictpcre2only>\s*+(?!(?&keywordlist))(?<typedefnmmatched>(?<typedefnmfacet>(?&identifierrawfacet))(??C&identifier_typedef))\s*+)
(?<identifierminetypedef#restrictperlonly>\s*+\b(?<typedefnmmatchedfacet>(??C&identifier_typedef))\b\s*+)

(?<keywordlist>(?&typesandqualifiersmask)|\b(typedef|struct|enum|sizeof|break|case|continue|default|do|else|for|goto|if|return|switch|while)\b)

(?<typenamerev>(?<#restrictoutsidefacet>(?&typenamefacet)(?!(?&castexpr)))|(?&typename)(?C&applycast)(?&castexprfacet))


(?<abstrbitfield>\s*+:\s*+(?&assignorsomething))
(?<designator>\s*+(\[(?&primexpr)\]|\.\s*+(?&identifier))\s*+)
(?<initializer>(?&assignorsomething)(?C95)|\s*+[{]((?&designator)++=)?+(?&initializer)?(,(?&initializer))*+,?+\s*+[}]\s*+)
(?<abstrinitialization>=(?&initializer))

(?<calloutid>)
(?<identifiermine>\s*+(?!(?&keywordlist))(?<identlasttagfacet>(?&identifierrawfacet))(?C&calloutid<identlasttagfacet>)\s*+)

(?<>)
(?<structorunion>\s*+(?<structorunionlast>struct|union|(?<enum>enum))
	((?&identifierminestruct<>)?+\s*+[{](?(<enum>)(?C&begin_enumerator_def<identlasttagfacet)
	(?<enumerator>(?&&identifiermine<add_ident_to_enum_def>)
	((=(?C&beginconstantexpr)(?&assignorsomething)(?C&end_ass_to_enum_def))
	|(?C&end_without_ass_to_enum_def)))?+(,(?&enumerator))*+,?+\s*+
	|(?C&struc_or_union_body<identlasttagfacet, structorunionlast>)\s*+((?&typenamebitfl)\s*+;\s*+)*+)
	[}](?(<enum>)()|(?C&endbuildingstructorunion))\s*+
|(?&identifierminestruct<>))(?#|(?&enum<>)))

(?#
(?<>)
(?<enum>\s*+(?<structorunionlast>enum)(((?&&identifiermine<begin_enumerator_def>)
	|(?C94))\s*+[{](?<enumerator>(?&&identifiermine<add_ident_to_enum_def>)((=(?C&beginconstantexpr)(?&assignorsomething)(?C92))
	|(?C93)))?+(,(?&enumerator))*+,?+\s*+[}]\s*+
	|(?&&identifiermine<begin_enumerator_decl>)))
)
(?<>)
(?<identifierminestruct>\s*+(?!(?&keywordlist))(?<identlasttagfacet>(?&identifierrawfacet))(?#C58<structorunionlast, identlasttagfacet>)\s*+)
(?#C42)
(?<declninitopt>(?&typenameinsidedeclfacet)(?&abstrinitialization)?+)
(?<declaration>((?&declninitoptfacet)(?!)
			(,(?#C43)(?&abstdecloutter)(?#C42)(?&abstrinitialization)?+)*+\s*+;\s*+))

(,(?&abstdecloutter)(?&abstrinitialization)?+)*+