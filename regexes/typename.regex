

(?<qualifs>(?<typesandqualifiers>\s*+
						(?<typesandqualifiersmask>(\bint\b|\bchar\b|\bshort\b|\blong\b
						|\bsigned\b|\bunsigned\b|\bfloat\b|\bdouble\b)|
						(?<qualifiers>\bconst\b|\brestrict\b|\bvolatile\b)
						|(?<storageclass>\bextern\b|\bstatic\b|\bauto\b|\bregister\b))
						(??{inc "facet"})(?{call "add_type_or_qualifier"})(??{dec "facet"})\s*+))

(?<align>\s*+\b__declspec[(]\s*+\balign[(]\s*+(?<align>(?&numberliteralraw))\s*+[)]\s*+[)]\s*+)

(?<typename>\s*+[(](??{use re 'eval'; $typenameregex //= qr{
	(?(DEFINE)$mainregexdefs)
	(?{set2 {"savedcallouts" => []}})
	(?=(?<Tqualifs>((?&qualifs)|\s*+((?(<strc>)(*F))(?(<typedefnmmatched>)(*F))
		((?<strc>(??{set {"tpdf" => ""}})(?&structorunion)(??{unset {"tpdf" => ""}}))
		|(?<typedefnmmatched>\b(??{identifier_typedef})\b))
		|(?(<typedefkey>)(*F))(?<typedefkey>(\btypedef\b)))\s*+)++))
		
	(?{set2 {"qualifstrace" => evalval sub{$savedcallouts[-1]}}; unset2 "savedcallouts"})
		\g{Tqualifs}(?{call "identifier_decl"})((??{set {"abstdecl" => "optoutter"}})(?&abstdecl)(??{unset {"abstdecl" => "optoutter"}}))?+
		(?{call "enddeclaration"})
		(?{evalval sub{replay $qualifstrace[-1]}})
		}sxxn})

		[)](?{unset2 "qualifstrace"})(?{call "endqualifs"})\s*+
		
)

(?<allqualifsparam>\s*+(?&qualifs)\s*+|(?&structorunion))

(?<allqualifsdecl>(?&allqualifsparam)|(?(?{evalval sub{$tpdf[-1] eq "notpdf"}})(*F)|\s*+(\btypedef\b)\s*+))

(?<abstrmostoutteropt>\s*+(?&callingconv)?+[(]((??{set {"abstdecl" => "optoutter"}})(?&abstdecl)(??{unset {"abstdecl" => "optoutter"}}))[)]\s*+)

(?<abstrmostoutter>\s*+(?&callingconv)?+([(]((??{set {"abstdecl" => "outter"}})(?&abstdecl)(??{unset {"abstdecl" => "outter"}}))[)]|(?&identifierminedecl))\s*+)

(?<abstrmostoutterparams>\s*+(?{set2 {"tpdf" => "subsparams"}})(?(?=(?<subs>(?&abstrsubs)))(?{unset2 "tpdf"})\g{subs}
			|(?{unset2 "tpdf"})([(]((??{set {"abstdecl" => "outterparams"}})(?&abstdecl)(??{unset {"abstdecl" => "outterparams"}}))[)]
			|(?&identifierminedecl)
			|(?{call "identifier_decl"})))\s*+)

(?<identifierminedecl>\s*+(?!((??{inc "facet"})(?&keywordlist)(??{dec "facet"})))(?<ident>((??{inc "facet"})(?&identifierraw)(??{dec "facet"})))
	(?{call "identifier_decl"})\s*+)

(?#<Tabstrrest, Tabstrrestalt, Tinside>)

(?<Tabstrrest>
	(?(?{evalval sub {$abstdecl[-1] eq "outterparams"}})

		((??{inc "facet"})(?&abstrmostoutterparams)(??{dec "facet"}))((??{inc "facet"})(?&abstrsubs)(??{dec "facet"}))*+

	|(?(?{evalval sub {$abstdecl[-1] eq "outter"}})

		((??{inc "facet"})(?&abstrmostoutter)(??{dec "facet"}))((??{inc "facet"})(?&abstrsubs)(??{dec "facet"}))*+

	|(?(?{evalval sub {$abstdecl[-1] eq "optoutter"}})

		((??{inc "facet"})(?&abstrmostoutteropt)(??{dec "facet"}))?+((??{inc "facet"})(?&abstrsubs)(??{dec "facet"}))*+)))

	)

(?<Tabstrrestalt>
	(?(?{evalval sub {$abstdecl[-1] eq "outterparams"}})(?&abstrmostoutterparams)(?&abstrsubs)*+
	|(?(?{evalval sub {$abstdecl[-1] eq "outter"}})(?&abstrmostoutter)(?&abstrsubs)*+
	|(?(?{evalval sub {$abstdecl[-1] eq "optoutter"}})((?&abstrmostoutteropt)(?&abstrsubs)*+|(?&abstrsubs)++))))
	)

(?<Tinside>
	(?(?{evalval sub {$abstdecl[-1] eq "outterparams"}})(?&abstrmostoutterparams)
	|(?(?{evalval sub {$abstdecl[-1] eq "outter"}})(?&abstrmostoutter)
	|(?(?{evalval sub {$abstdecl[-1] eq "optoutter"}})(?&abstrmostoutteropt)?+))
	))

(?<param>
						(??{set {"typename" => "insideparams"}, {"decls" => "bb"}})
						((?&abstdeclorallqualifs))(??{unset {"typename" => "insideparams"}, {"decls" => "bb"}}))

(?<abstdecl>(?<abstrptrrev>(?<abstrptr>\s*+[*]\s*+
						(?<qualifptr>(?&qualifiers))*+)
						(?!(?&abstrptrrev)(?{call "addptrtotype"}))
						(?<abstrrest>(?&Tinside)(?<abstrsubs>\s*+(\[
							(?(?{evalval sub {$tpdf[-1] eq "subsparams"}})(?{call "identifier_decl"}))
						(?{call "beginconstantexpr"})(?&primexpr)\]
						(?{call "addsubtotype"})(?{call "endconstantexpr"})
						|([(](?(?{evalval sub {$tpdf[-1] eq "subsparams"}})(?{call "identifier_decl"}))
						((??{set {"tpdf" => "firstparam"}})(?&param)(??{unset {"tpdf" => "firstparam"}})
						(,(?&param))*
						(?<rest>,\s*+\.\.\.\s*+)?+)[)](?{call "endfunctionparamdecl"})
						|[(]\s*+((?<rest>\.\.\.)|\bvoid\b)?+\s*+[)](?{call "startfunctionparamdecl"})
						(?{call "endfunctionparamdecl"})))\s*+)*+
						(?{call "addptrtotype"}))|
						(?&abstrptr))(?&abstrptr)*+(?&Tabstrrest)|(?&Tabstrrestalt))

(?<callingconv>\b(__cdecl|__stdcall|__thiscall|__fastcall)\b)

(?<Tasbtdecloutter>
	(?(?{evalval sub {$typename[-1] eq "insideparams"}})((??{set {"abstdecl" => "outterparams"}})(?&abstdecl)(??{unset {"abstdecl" => "outterparams"}}))
	|((??{set {"abstdecl" => "outter"}})(?&abstdecl)(??{unset {"abstdecl" => "outter"}})))
	)

(?<Tabstinitorbitfl>
	(?(?{evalval sub {$typename[-1] eq "bitfl"}})(?&abstrbitfield)|(?(?{$insideparams_typename})(*F)|(?&abstrinitialization)))
	)

(?<Tdecl>(?&Tasbtdecloutter)
			(?&Tabstinitorbitfl)?+)

(?<Tabsqualifnonoptional>
	(?(?{evalval sub {$typename[-1] eq "insideparams"}})(?&allqualifsparam)|(?&allqualifsdecl))
)


(?<declcomma>,(?&Tdecl))

(?#<Tabsqualifs, Tasbtdecloutter, Tabstinitorbitfl, Tidentifierminetypedef, Tidentifierminetypedeffwd, Tqualifwrapper>)
(?<abstdeclorallqualifs>
(??{use re 'eval'; $abstdeclorallqualifsregex //= qr{
	(?(DEFINE)$mainregexdefs)
	(?{set2 {"savedcallouts" => []}})
	((?=(?<Tqualifs>((?&qualifs)|\s*+((?(<strc>)(*F))(?(<typedefnmmatched>)(*F))
		((?<strc>(??{set {"tpdf" => ""}})(?&structorunion)(??{unset {"tpdf" => ""}}))
		|(?<typedefnmmatched>\b(??{identifier_typedef})\b))
		|(?(<typedefkey>)(*F))(?<typedefkey>(\btypedef\b)))\s*+)++))
		|(?(?{evalval sub{$decls[-1] eq "extrnl"}})|(*F)))
		
	(?{set2 {"qualifstrace" => evalval sub{$savedcallouts[-1]}}; unset2 "savedcallouts"})
	\g{Tqualifs}(?(?{evalval sub{$tpdf[-1] eq "firstparam"}})(?{call startfunctionparamdecl}))
	((?<declinner>(?&Tdecl)(?{call "enddeclaration"})(?{evalval sub{replay $qualifstrace[-1]}})(?{call "endqualifs"}))
	(?(?{evalval sub {$typename[-1] eq "insideparams"}})|(,(?&declinner))*+)
	|(?(<strc>)(?(?{evalval sub {$decls[-1] eq "extrnl"}})|(*F))|(*F)))(?{unset2 "qualifstrace"})
}sxxn})
)

(?<decl>(?&abstdeclorallqualifs)((?&compoundstatement)|\s*+;(?{call "endfulldecl"})\s*+))

(?<cprogram>((??{set {"decls" => "extrnl"}})(?&decl)(??{unset {"decls" => "extrnl"}}))*+)

(?<keywordlist>(?&typesandqualifiersmask)
	|\b(typedef|struct|enum|sizeof|break|case|continue|default|do|else|for|goto|if|return|switch|while)\b)

(?<typenamerev>(((??{inc "facet"})(?&typename)(??{dec "facet"}))(?!(?&castexpr)))|(?&typename)(?{call "applycast"})((??{inc "facet"})(?&castexpr)(??{dec "facet"})))


(?<abstrbitfield>\s*+:\s*+(?{call "beginconstantexpr"})(?&assignorsomething)(?{call "endconstantexpr"}))
(?<designator>\s*+(\[(?&primexpr)\]|\.\s*+(?&identifier))\s*+)
(?<initializer>(?&assignorsomething)|\s*+[{]((?&designator)++=)?+(?&initializer)?(,(?&initializer))*+,?+\s*+[}]\s*+)
(?<abstrinitialization>=(?&initializer))

(?<add_ident_to_enum_def>\s*+(?!((??{inc "facet"})(?&keywordlist)(??{dec "facet"})))(?<identlasttag>((??{inc "facet"})(?&identifierraw)(??{dec "facet"})))(?{call "add_ident_to_enum_def"})\s*+)


(?<strcelem>(
		(??{set {"typename" => "bitfl"}, {"decls" => "bb"}})
		(?&abstdeclorallqualifs)(??{unset {"typename" => "bitfl"}, {"decls" => "bb"}}))\s*+;\s*+)

(?<structbody>\s*+[{](?(<enum>)(?{call "begin_enumerator_def"})
	(?<enumerator>(?&add_ident_to_enum_def)
	((=(?{call "beginconstantexpr"})(?&assignorsomething)(?{call "end_ass_to_enum_def"}))
	|(?{call "end_without_ass_to_enum_def"})))?+(,(?&enumerator))*+,?+\s*+
	|(?{call "struc_or_union_body"})\s*+(?&strcelem)*+)\s*+
	[}]\s*+(?(<enum>)()|(?{call "endbuildingstructorunion"}))\s*+)

(?<structorunion>(?(?{evalval sub{$tpdf[-1] eq "notpdf"}})(*F)|
	(??{set {"tpdf" => ""}})((?=(?<begin>\s*+\b(?<structorunionlast>struct|union|(?<enum>enum))\b\s*+(?&align)?+
	(?<lasttag>(?&identifierminestruct))?+))\g{begin}(?(<lasttag>)(?&structbody)?+|(?&structbody)))
	(?{inc2 "facet"})(?{call "add_tag"})(?{dec2 "facet"})
	(??{unset {"tpdf" => ""}}))
)

(?<identifierminestruct>(?!((??{inc "facet"})(?&keywordlist)(??{dec "facet"})))(((??{inc "facet"})(?&identifierraw)(??{dec "facet"}))))