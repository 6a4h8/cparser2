

(?<typenamequalifs>(?<qualifs>(?<typesandqualifiers>\s*+
						(?<typesandqualifiersmask>(\bvoid\b|\bint\b|\bchar\b|\bshort\b|\blong\b
						|\bsigned\b|\bunsigned\b|\bfloat\b|\bdouble\b)|
						(?<qualifiers>\bconst\b|\brestrict\b|\bvolatile\b)
						|(?<storageclass>\bextern\b|\bstatic\b|\bauto\b|\bregister\b))
						(?{call "add_type_or_qualifier"})\s*+))|(?&structorunion)
						|(?&identifierminetypedef))

(?<align>\s*+\b__declspec[(]\s*+\balign[(]\s*+(?<align>(?&numberliteralraw))\s*+[)]\s*+[)]\s*+)

(?<typename>\s*+[(](?(?=(?<strc>(?&structorunion))))(?=((??{inc "facet"})(?&typenamequalifs)(??{dec "facet"}))(?{call "identifier_decl"})
						(?<abstrdeclopt>((??{set {"abstdecl" => "optoutter"}})(?&abstdecl)(??{unset {"abstdecl" => "optoutter"}}))?+)
						(?{call "enddeclaration"}))
						(?&typenamequalifs)++
						\g{abstrdeclopt}[)](?{call "endqualifs"})\s*+)

(?<allqualifsparam>\s*+(?&qualifs)\s*+|(?&structorunion))

(?<allqualifsdecl>(?&allqualifsparam)|(?(?{evalval sub{$tpdf[-1] eq "notpdf"}})(*F)|\s*+(\btypedef\b)\s*+))

(?<abstrmostoutteropt>\s*+(?&callingconv)?+[(]((??{set {"abstdecl" => "optoutter"}})(?&abstdecl)(??{unset {"abstdecl" => "optoutter"}}))[)]\s*+)

(?<abstrmostoutter>\s*+(?&callingconv)?+([(]((??{set {"abstdecl" => "outter"}})(?&abstdecl)(??{unset {"abstdecl" => "outter"}}))[)]|(?&identifierminedecl))\s*+)

(?<abstrmostoutterparams>\s*+(?(?=(?{$facet++})(?&abstrsubs))(?{$facet--})(?{call "identifier_decl"})(?&abstrsubs)
			|(?{$facet--})([(]((??{set {"abstdecl" => "outterparams"}})(?&abstdecl)(??{unset {"abstdecl" => "outterparams"}}))[)]
			|(?&identifierminedecl)
			|(?{call "identifier_decl"})))\s*+)

(?<identifierminedecl>\s*+(?!((??{inc "facet"})(?&keywordlist)(??{dec "facet"})))(?<ident>((??{inc "facet"})(?&identifierraw)(??{dec "facet"})))
	(?{call "identifier_decl"})\s*+)

(?#<Tabstrrest, Tabstrrestalt, Tinside>)

(?<Tabstrrest>
	(?(?{evalval sub {$abstdecl[-1] eq "outterparams"}})

		((??{inc "facet"})(?&abstrmostoutterparams)(??{dec "facet"}))((??{inc "facet"})(?&abstrsubs)(??{dec "facet"}))*+

	|(?(?{evalval sub {$abstdecl[-1] eq "outter"}})

		((??{inc "facet"})(?&abstrmostoutter)(??{dec "facet"}))((??{inc "facet"})(?&abstrsubs)(??{dec "facet"}))*+

	|(?(?{evalval sub {$abstdecl[-1] eq "optoutter"}})

		((??{inc "facet"})(?&abstrmostoutteropt)(??{dec "facet"}))?+((??{inc "facet"})(?&abstrsubs)(??{dec "facet"}))*+)))

	)

(?<Tabstrrestalt>
	(?(?{evalval sub {$abstdecl[-1] eq "outterparams"}})(?&abstrmostoutterparams)(?&abstrsubs)*+
	|(?(?{evalval sub {$abstdecl[-1] eq "outter"}})(?&abstrmostoutter)(?&abstrsubs)*+
	|(?(?{evalval sub {$abstdecl[-1] eq "optoutter"}})((?&abstrmostoutteropt)(?&abstrsubs)*+|(?&abstrsubs)++))))
	)

(?<Tinside>
	(?(?{evalval sub {$abstdecl[-1] eq "outterparams"}})(?&abstrmostoutterparams)
	|(?(?{evalval sub {$abstdecl[-1] eq "outter"}})(?&abstrmostoutter)
	|(?(?{evalval sub {$abstdecl[-1] eq "optoutter"}})(?&abstrmostoutteropt)?+))
	))

(?<abstdecl>(?(?{isfacet})(?&abstrptr)(?&abstrptr)*+(?&Tabstrrest)
						|(?<abstrptrrev>(?<abstrptr>\s*+[*]\s*+
						(?<qualifptr>(?&qualifiers))*+)
						(?!(?&abstrptrrev)(?{call "addptrtotype"}))
						(?<abstrrest>(?&Tinside)(?<abstrsubs>\s*+(\[(?{call "beginconstantexpr"})(?&primexpr)\]
						(?{call "addsubtotype"})(?{call "endconstantexpr"})
						|[(](?{call "startfunctionparamdecl"})(\s*+\bvoid\b\s*+
						|((((?(?=(?<strc>(?&structorunion))))((??{set {"typename" => "insideparams"}})(?&abstdeclorallqualifsbasic)(??{unset {"typename" => "insideparams"}}))))?+
						(,((?(?=(?<strc>(?&structorunion))))((??{set {"typename" => "insideparams"}})(?&abstdeclorallqualifsbasic)(??{unset {"typename" => "insideparams"}}))))*(?<rest>,\s*+\.\.\.\s*+)?+))[)](?{call "endfunctionparamdecl"}))\s*+)*+
						(?{call "addptrtotype"}))|
						(?&abstrptr))(?&abstrptr)*+(?&Tabstrrest))|(?&Tabstrrestalt))

(?<callingconv>\b(__cdecl|__stdcall|__thiscall|__fastcall)\b)

(?<Tasbtdecloutter>
	(?(?{evalval sub {$typename[-1] eq "insideparams"}})((??{set {"abstdecl" => "outterparams"}})(?&abstdecl)(??{unset {"abstdecl" => "outterparams"}}))
	|((??{set {"abstdecl" => "outter"}})(?&abstdecl)(??{unset {"abstdecl" => "outter"}})))
	)

(?<Tabstinitorbitfl>
	(?(?{evalval sub {$typename[-1] eq "bitfl"}})(?&abstrbitfield)|(?(?{$insideparams_typename})(*F)|(?&abstrinitialization)))
	)

(?<Tdecl>(?&Tasbtdecloutter)
			(?&Tabstinitorbitfl)?+)

(?<Tabsqualifnonoptional>
	(?(?{evalval sub {$typename[-1] eq "insideparams"}})(?&allqualifsparam)|(?&allqualifsdecl))
)

(?<Tabsqualifs>
	(?(?{evalval sub{$decls[-1] eq "extrnl"}})
	(?&allqualifsdecl)*+(?(?{evalval sub{$tpdf[-1] eq "nonm"}})|(?&identifierminetypedef)?+(?&allqualifsdecl)*+)
	|(?(?{evalval sub{$tpdf[-1] eq "nonm"}})(?&Tabsqualifnonoptional)++|
	((?&Tabsqualifnonoptional)*+(?&identifierminetypedef)(?&Tabsqualifnonoptional)*+
	|(?&Tabsqualifnonoptional)++)))
	)

(?<identifierminetypedef>\s*+(?&typedefnmmatched)\s*+)

(?#<Tabsqualifs, Tdecl, Tidentifierminetypedef, Tidentifierminetypedeffwd, Tqualifwrapper>)
(?<abstdeclorallqualifsbasic>
	(?(?{isfacet})((??{inc "facet"})(?&Tabsqualifs)(??{dec "facet"}))((??{inc "facet"})(?&Tdecl)(??{dec "facet"}))|
	(?(?=(?{inc2 "facet"; set2 {"tpdf" => "nonm"}})(?&Tabsqualifs)?\s*+(?<typedefnmmatched>\b(??{identifier_typedef})\b)\s*+))
	(?{dec2 "facet"; unset2 "tpdf"})
	(?(?=(?{inc2 "facet"; set2 {"tpdf" => "notpdf"}})(?&Tabsqualifs)?\s*+(?<typedefkey>(\btypedef\b))\s*+))
	(?{dec2 "facet"; unset2 "tpdf"})
	(?=((??{inc "facet"})(?&Tabsqualifs)(??{dec "facet"}))(?<restdeclbasic>(?&Tdecl))(?{call "enddeclaration"}))
				(?&Tabsqualifs)\g{restdeclbasic}(?{call "endqualifs"}))
)


(?<declcomma>,(?&Tdecl))

(?#<Tabsqualifs, Tasbtdecloutter, Tabstinitorbitfl, Tidentifierminetypedef, Tidentifierminetypedeffwd, Tqualifwrapper>)
(?<abstdeclorallqualifs>
		((?(?{isfacet})((??{inc "facet"})(?&Tabsqualifs)(??{dec "facet"}))((??{inc "facet"})(?&Tdecl)(??{dec "facet"}))((??{inc "facet"})(?&declcomma)(??{dec "facet"}))*+|
		(?<restoutter>	
	(?(?=(?{inc2 "facet"; set2 {"tpdf" => "nonm"}})(?&Tabsqualifs)?\s*+(?<typedefnmmatched>\b(??{identifier_typedef})\b)\s*+))
	(?{dec2 "facet"; unset2 "tpdf"})
	(?(?=(?{inc2 "facet"; set2 {"tpdf" => "notpdf"}})(?&Tabsqualifs)?\s*+(?<typedefkey>(\btypedef\b))\s*+))
	(?{dec2 "facet"; unset2 "tpdf"})

	(?=\g{absqualifsbasic}(?<restdecl>(?(<restdecl>)\g{restdecl}),(?&Tdecl)(?{call "enddeclaration"})))
				(?=(?&Tabsqualifs))
				(\g{absqualifsbasic}\g{restdecl}(?{call "endqualifs"})
				|(?&restoutter)))
				)|\g{absqualifsbasic})
)

(?<decl_bulk>(?(?=((?<strc>(?&structorunion))(?<fill>\s*+;\s*+)?+)))
	(?(<fill>)\g{-1}|(?=(?<absqualifsbasic>(?&abstdeclorallqualifsbasic)(?(?=(?<compound>(?&compoundstatement))))))
	(?(<compound>)((??{inc "extractfns","facet"})(?&abstdeclorallqualifsbasic)(??{dec "extractfns","facet"}))\g{compound}
	|(?&abstdeclorallqualifs)\s*+;(?{call "endfulldecl"})\s*+)))

(?<decl>(?(?=((?<strc>(?&structorunion))(?<fill>\s*+;\s*+)?+)))
	(?(<fill>)\g{-1}|(?=(?<absqualifsbasic>(?&abstdeclorallqualifsbasic)(?(?=(?<compound>(?&compoundstatement))))))
	(?(<compound>)\g{absqualifsbasic}\g{compound}
	|(?&abstdeclorallqualifs)\s*+;(?{call "endfulldecl"})\s*+)))

(?<cprogram>((??{set {"decls" => "extrnl"}})(?&decl)(??{unset {"decls" => "extrnl"}}))*+)

(?<keywordlist>(?&typesandqualifiersmask)
	|\b(typedef|struct|enum|sizeof|break|case|continue|default|do|else|for|goto|if|return|switch|while)\b)

(?<typenamerev>(?(?{isfacet})(*F))(((??{inc "facet"})(?&typename)(??{dec "facet"}))(?!(?&castexpr)))|(?&typename)(?{call "applycast"})((??{inc "facet"})(?&castexpr)(??{dec "facet"})))


(?<abstrbitfield>\s*+:\s*+(?{call "beginconstantexpr"})(?&assignorsomething)(?{call "endconstantexpr"}))
(?<designator>\s*+(\[(?&primexpr)\]|\.\s*+(?&identifier))\s*+)
(?<initializer>(?&assignorsomething)|\s*+[{]((?&designator)++=)?+(?&initializer)?(,(?&initializer))*+,?+\s*+[}]\s*+)
(?<abstrinitialization>=(?&initializer))

(?<add_ident_to_enum_def>\s*+(?!((??{inc "facet"})(?&keywordlist)(??{dec "facet"})))(?<identlasttag>((??{inc "facet"})(?&identifierraw)(??{dec "facet"})))(?{call "add_ident_to_enum_def"})\s*+)

(?<structbody>\s*+[{](?(<enum>)(?{call "begin_enumerator_def"})
	(?<enumerator>(?&add_ident_to_enum_def)
	((=(?{call "beginconstantexpr"})(?&assignorsomething)(?{call "end_ass_to_enum_def"}))
	|(?{call "end_without_ass_to_enum_def"})))?+(,(?&enumerator))*+,?+\s*+
	|(?{call "struc_or_union_body"})\s*+(((??{set {"typename" => "bitfl"}, {"decls" => "bb"}})(?&decl)(??{unset {"typename" => "bitfl"}, {"decls" => "bb"}})))*+)
	[}]\s*+(?(<enum>)()|(?{call "endbuildingstructorunion"}))(?{call "add_tag"})\s*+)

(?<structorunion>(?=(?<begin>\s*+\b(?<structorunionlast>struct|union|(?<enum>enum))\b\s*+(?&align)?+
	(?<lasttag>(?&identifierminestruct))?+))(?(<strc>)\g{strc}(?{call "add_tag"})|
	\g{begin}(?(<lasttag>)(?&structbody)?+|(?&structbody))))

(?<identifierminestruct>\s*+(?!((??{inc "facet"})(?&keywordlist)(??{dec "facet"})))(((??{inc "facet"})(?&identifierraw)(??{dec "facet"})))\s*+)