

(?<qualifs>(?<typesandqualifiers>\s*+
						(?<typesandqualifiersmask>(?&typeorqualif))\s*+))

(?<align>\s*+\b__declspec[(]\s*+\balign[(]\s*+(?<align>(?&numberliteralraw))\s*+[)]\s*+[)]\s*+)

(?<[typename]>\s*+[(]
	(*RECORD)
	(?=(?<Tqualifs>((?&qualifs)|\s*+((?(<strc>)(*F))(?(<typedefnmmatched>)(*F))
		((?<strc>(?&structorunion))
		|(?<typedefnmmatched>(?&identifier_typedef)))
		|(?(<typedefkey>)(*F))(?<typedefkey>(\btypedef\b)))\s*+)++))
	(*STOP)
		\g{Tqualifs}(?identifier_decl)(?&abstdecl(optoutter))?+
		(?enddeclaration)
		(*REPLAY)

		[)](?endqualifs)\s*+
		
)

(?<abstrmostoutteropt>\s*+(?&callingconv)?+[(](?&abstdecl(optoutter))[)]\s*+)

(?<abstrmostoutter>\s*+(?&callingconv)?+([(](?&abstdecl(outter))[)]|(?&identifierminedecl))\s*+)

(?<abstrmostoutterparams>\s*+(?(?=(?<subs>(?&abstrsubs(subsparams))))\g{subs}
			|([(](?&abstdecl(outterparams))[)]
			|(?&identifierminedecl)
			|(?identifier_decl)))\s*+)

(?<identifierminedecl>\s*+(?<ident>(?&identifierraw_qualified))
	(?identifier_decl)\s*+)

(?<Tabstrrestalt>
	(?(<outterparams>)(?&abstrmostoutterparams)(?&abstrsubs)*+
	|(?(<outter>)(?&abstrmostoutter)(?&abstrsubs)*+
	|(?(<optoutter>)((?&abstrmostoutteropt)(?&abstrsubs)*+|(?&abstrsubs)++))))
	)

(?<Tinside>
	(?(<outterparams>)(?&abstrmostoutterparams)
	|(?(<outter>)(?&abstrmostoutter)
	|(?(<optoutter>)(?&abstrmostoutteropt)?+))
	))

(?<param>(?&abstdeclorallqualifs(insideparams, bb)))

(?<abstrsubs>\s*+(\[
						(?(<subsparams>)(?identifier_decl))
						(?beginconstantexpr)(?&primexpr)\]
						(?addsubtotype)(?endconstantexpr)
						|[(](?(<subsparams>)(?identifier_decl))
						((?&param(firstparam, nesteddecl))
						(,(?&param(nesteddecl)))*|(?startfunctionparamdecl))
						(?<rest>,?+\s*+\.\.\.\s*+)?+\s*+[)](?endfunctionparamdecl))\s*+)

(?<abstdecl>
		(?<abstrptrrev>(?<abstrptr>\s*+[*]\s*+
						(?<qualifptr>(?&typeorqualif))*+)
						(?(?!(?<foundabstr>(?&abstrptrrev))(?addptrtotype))
						(?<abstrrest>(?&Tinside)(?&abstrsubs)*+
						(?addptrtotype))|
						\g{foundabstr}))|(?&Tabstrrestalt))

(?<callingconv>\b(__cdecl|__stdcall|__thiscall|__fastcall)\b)

(?<Tasbtdecloutter>
	(?(<insideparams>)(?&abstdecl(outterparams))
	|(?&abstdecl(outter)))
	)

(?<Tabstinitorbitfl>
	(?(<bitfl>)(?&abstrbitfield)|(?&abstrinitialization))
	)

(?<Tdecl>(?&Tasbtdecloutter)
			(?&Tabstinitorbitfl)?+)


(?<declcomma>,(?&Tdecl))

(?<[abstdeclorallqualifs]>{
	typefound,
}>
	(*RECORD)
	(?=(?<Tqualifs>((?&qualifs)|\s*+((?(<strc>)(*F))(?(<typedefnmmatched>)(*F))
		((?<strc>(?&structorunion))
		|(?(<typefound>)(*F))(?<typedefnmmatched>(?&identifier_typedef)))
		|(?(<typedefkey>)(*F))(?<typedefkey>(\btypedef\b)))\s*+)++
		|(?(<extnrl>)|(*F))))
	(*STOP)
	\g{Tqualifs}(?(<firstparam>)(?startfunctionparamdecl))
	(?(?=(?<declinner>(?&Tdecl)(?enddeclaration)(*REPLAY)(?endqualifs)))\g{declinner}
	(?(<insideparams>)|(,(?&declinner))*+)|(?(<strc>)|(*F)))
)

(?<decl>(?&abstdeclorallqualifs)((?&compoundstatement)|\s*+;(?endfulldecl)\s*+))

(?<cprogram>(?&decl(extrnl))*+)

(?<typenamerev>(*RECORD)(?&<typename>)(*STOP)(?(?!(?&<castexpr>))|\g{typename}(*REPLAY)(?applycast)\g{castexpr}))


(?<abstrbitfield>\s*+:\s*+(?beginconstantexpr)(?&assignorsomething)(?endconstantexpr))
(?<designator>\s*+(\[(?&primexpr)\]|\.\s*+(?&identifier))\s*+)
(?<initializer>(?&assignorsomething)|\s*+[{]((?&designator)++=)?+(?&initializer)?(,(?&initializer))*+,?+\s*+[}]\s*+)
(?<abstrinitialization>=(?&initializer))

(?<add_ident_to_enum_def>\s*+(?<identlasttag>(?&identifierraw_qualified))(?add_ident_to_enum_def)\s*+)


(?<strcelem>(?&abstdeclorallqualifs(bitfl, bb))\s*+;\s*+)

(?<structbody>\s*+[{](?(<enum>)(?begin_enumerator_def)
	(?<enumerator>(?&add_ident_to_enum_def)
	((=(?beginconstantexpr)(?&assignorsomething)(?end_ass_to_enum_def))
	|(?end_without_ass_to_enum_def)))?+(,(?&enumerator))*+,?+\s*+
	|(?struc_or_union_body)\s*+(?&strcelem(nesteddecl))*+)\s*+
	[}]\s*+(?(<enum>)()|(?endbuildingstructorunion))\s*+)

(?<structorunion>
	(?=(?<begin>\s*+\b(?<structorunionlast>struct|union|(?<enum>enum))\b\s*+(?&align)?+
	(?<lasttag>(?&identifierminestruct))?+))\g{begin}(?(?=(?<body>(?&structbody)))\g{body}|(?(<lasttag>)|(*F)))
	(?add_tag)
)

(?<identifierminestruct>(?&identifierraw_qualified))