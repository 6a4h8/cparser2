(?<inner>\s*+(((?<stringlit>("|')(?{push2 \@matches, {"begincharliteral" => $^N}})
						(?(?=(((?<escape>(?<escaperaw>\\(?(?=x)x[0-9a-fA-F]++|(?(?=0\d)0[0-7]++
						|['"?\\abfnrtv0]))))
						(?{call 'addescapesequencetostring'})|
						(?<text>(?<textraw>((?!(?&escape)|(??{$matches[-1]->{begincharliteral}})).)++)(?{call 'addplaintexttostring'})))*+
						(??{$matches[-1]->{begincharliteral}})))(??{qr{\Q$^N\E}})|(?{pop2 \@matches})(*F))
						(?{call 'add_literal'})(?{pop2 \@matches}))
						|(?(?!((?&floating)))(?<numberliteral>(?<numberliteralraw>(?(?=0x)0x(?<hex>[0-9a-fA-F]++)|(?(?=0b)0b(?<bin>[01]++)
						|(?(?=0\d)0(?<oct>[0-7]++)|(?<dec>\d++))))(?<lng>[Uu](ll|LL|[lL])?+|(ll|LL|[lL])[Uu]?+)?+)
						(?{call 'num_lit'}))
						|(??{qr{\Q$^N\E}}))
						|(?<identifier>\s*+
						(?<ident>(?&identifierraw))(?{call 'obtainvalbyidentifier'})\s*+)))\s*+)


(?<floating>(?<fractional>(?<wholeopt>\d*+)\.(?<fraction>\d++)|(?<whole>\d++)\.)(?<exponent>[eE](?<signexp>[+-])?+\d++)?+
	(?<suffixflt>[flFL])?+(?{call 'collect_float_literal'})
	|(?<wholenodot>\d++)(?<exponent>[eE](?<signexp>[+-])?+(?<exp>\d++))(?<suffixflt>[flFL])?+(?{call 'collect_float_literal'}))

(?<templateelem>(?{push2 \@flags, {"template"}})(?(?=((?&typenameinner)))
	(?{pop2 \@flags, {"template"}})(??{qr{\Q$^N\E}})|(?{pop2 \@flags, {"template"}})\b(true|false)\b))

(?<template>(?{push2 \@savedcallouts, []})
		(?{++$recording; print "recording template\n"})(?(?=(<(?&templateelem)(,(?&templateelem))*+>))(??{qr{\Q$^N\E}})
		|(?{$recording--; pop2 \@savedcallouts})(*F))
		(?{$recording--; pop2 \@savedcallouts})
)

(?<identext>(?&template)?+((::|[.@])(?&identifierinpurepart)))

(?<identifierinpurepart>(?&identifierpure)(?&identext)?+)

(?<identifierinpure>(?&identifierinpurepart)(?(?{existsflag "operator"})(?{delete $flags[-1]{operator}})\S++\s++|(?{delete $flags[-1]{operator}})))

(?<identifierpure>~?+((?>[_a-zA-Z](?<letter>[_a-zA-Z0-9])*+))(?{$flags[-1]{operator} = undef if ($^N =~ m{\boperator\b}) }))

(?<identifierraw>((?&identifierinpure))(??{checkident}))
(?<identifierraw_qualified>((?&identifierinpure))(??{checkidentpermissive}))
(?<identifier_typedef>((?&identifierinpure))(??{checktypedef}))

(?<typeorqualif>((?&identifierinpure))(??{checktypeorqualif}))